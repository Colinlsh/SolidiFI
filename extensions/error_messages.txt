'3209.sol:170:13: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n        if (currentCorpBank_.deposit.value(msg.value)(msg.sender) == true) {\n            ^----------------------------^\n';

'3209.sol:190:13: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n        if (currentCorpBank_.deposit2.value(msg.value)(msg.sender) == true) {\n            ^-----------------------------^\n';

'3209.sol:210:13: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n        if (currentCorpBank_.deposit3.value(msg.value)(msg.sender) == true) {\n            ^-----------------------------^\n';

'2301.sol:500:17: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\n                ^--------------------------------------------^\n';

'2839.sol:606:47: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address,bytes32,uint256,bool) external returns (bool,uint256) - did you forget the "payable" modifier?\n        (bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXIDFromDapp.value(_paid)(_addr, _name, _affCode, _all);\n                                              ^--------------------------------------^\n';

"(bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXIDFromDapp.value(_paid)(_addr, _name, _affCode, _all);";

"707.sol:1256:16: ParserError: Expected identifier, got 'LParen'\n    constructor() public {\n               ^\n";

"return oraclize.query_withGasLimit.value(price)(timestamp, datasource, arg, gaslimit)";

'2818.sol:1157:9: TypeError: Member "value" not found or not visible after argument-dependent lookup in function () external - did you forget the "payable" modifier?\n        ObokContract.donateDivs.value((_OBOK.sub(_OBOK / 3)).mul(2))();  // 66%\n        ^---------------------------^\n';

'984.sol:1062:23: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) returns (contract Deed) - did you forget the "payable" modifier?\n        Deed newBid = (new Deed).value(msg.value)(msg.sender);\n                      ^--------------^\n';

'2301.sol:500:17: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\n                ^--------------------------------------------^\n';

'2301.sol:500:17: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\n                ^--------------------------------------------^\n';

'172.sol:126:5: TypeError: Overriding function changes state mutability from "payable" to "nonpayable".\n    function increaseProfit() external  returns(bool){\n    ^ (Relevant source part starts here and spans across multiple lines).\n172.sol:69:5: Overriden function is here:\n    function increaseProfit() payable external  returns(bool);\n    ^--------------------------------------------------------^\n\n';

// 2818
"currentCorpBank_.deposit.value(address(this).balance)(address(currentCorpBank_))";

"(bool _isNewPlayer, uint256 _affID) = PlayerBook.registerNameXaddrFromDapp.value(msg.value)(msg.sender, _name, _affCode, _all)";

"PlayerBook.registerNameXaddrFromDapp.value(msg.value)(msg.sender, _name, _affCode, _all)";

"ObokContract.donateDivs.value((_OBOK.sub(_OBOK / 3)).mul(2))()  // 66%";

"2825.sol:1:1: SyntaxError: Source file requires different compiler version (current compiler is 0.4.15-develop.2017.8.9+commit.8b45bddb.Linux.g++ - note that nightly builds are considered to be strictly less than the released version\npragma solidity 0.4.15;\n^---------------------^\n";

"4186.sol:1317:64: TypeError: Division by zero.\n ... oraclizeFees / COMMISSION ... \n     ^-----------------------^\n";

"4186.sol:1315:19: TypeError: Division by zero.\n    ownerPayout = (losingChunk - oraclizeFees) / COMMISSION; // Payout to the owner; commission of losing pot, minus the same % of the fees\n                  ^---------------------------------------^\n";

"809.sol:1314:19: TypeError: Division by zero.\n    ownerPayout = (losingChunk - oraclizeFees) / COMMISSION; // Payout to the owner; commission of losing pot, minus the same % of the fees\n                  ^---------------------------------------^\n";

"if (COMMISSION == 0) {\n      ownersPayed = true;\n      ownerPayout = 0;\n      if (numberOfBets[winningOption] > 0) {\n        collectionFees = ((oraclizeFees != 0) ? (oraclizeFees / numberOfBets[winningOption] + 1) : 0); // We add 1 wei to act as a ceil for the integer div -- important because the contract cannot afford to lose that spare change, as it will gaurantee that the final payout collection will fail.\n      }";

'809.sol:241:13: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (uint256,string memory,string memory,uint256) external returns (bytes32) - did you forget the "payable" modifier?\n            oraclize.query_withGasLimit.value(price)(\n            ^-------------------------------^\n';

"function payOwners() private canPayOwners {\n    if (COMMISSION == 0) {\n      ownersPayed = true;\n      ownerPayout = 0;\n      if (numberOfBets[winningOption] > 0) {\n        collectionFees = ((oraclizeFees != 0) ? (oraclizeFees / numberOfBets[winningOption] + 1) : 0); // We add 1 wei to act as a ceil for the integer div -- important because the contract cannot afford to lose that spare change, as it will gaurantee that the final payout collection will fail.\n      }";

"function payOwners() private canPayOwners {\n    if (COMMISSION == 0) {\n      ownersPayed = true;\n      ownerPayout = 0;\n      if (numberOfBets[winningOption] > 0) {\n        collectionFees = ((oraclizeFees != 0) ? (oraclizeFees / numberOfBets[winningOption] + 1) : 0); // We add 1 wei to act as a ceil for the integer div -- important because the contract cannot afford to lose that spare change, as it will gaurantee that the final payout collection will fail.\n      }\n\n      return;\n    }\n\n    // Calculate total pool of ETH\n    // betted for the two outcomes.    \n    uint losingChunk = totalAmountsBet[1 - winningOption];\n    ownerPayout = (losingChunk - oraclizeFees) / COMMISSION; // Payout to the owner; commission of losing pot, minus the same % of the fees\n    if (numberOfBets[winningOption] > 0) {\n      collectionFees = ((oraclizeFees != 0) ? ((oraclizeFees - oraclizeFees / COMMISSION) / numberOfBets[winningOption] + 1) : 0); // The fees to be distributed to the collectors, after owner payout. See reasoning above for adding the 1 wei.\n    }\n\n    // Equal weight payout to the owners\n    OWNERS.transfer(ownerPayout);\n    ownersPayed = true;\n  }";

"809.sol:1810:9: DeclarationError: Undeclared identifier.\n        payOwners();\n        ^-------^\n";

'702.sol:461:9: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (bytes32) external - did you forget the "payable" modifier?\n        ix.getPayments().payForDemocracy.value(msg.value)(democHash);\n        ^------------------------------------^\n';

'702.sol:564:9: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (bytes32) external - did you forget the "payable" modifier?\n        ix.getPayments().payForDemocracy.value(msg.value)(democHash);\n        ^------------------------------------^\n'

'702.sol:2784:5: TypeError: Overriding function changes state mutability from "payable" to "nonpayable".\n    function payForDemocracy(bytes32 democHash) external {\n    ^ (Relevant source part starts here and spans across multiple lines).\n702.sol:2590:5: Overriden function is here:\n    function payForDemocracy(bytes32 democHash) payable  external;\n    ^------------------------------------------------------------^\n\n'

'* Line 2, Column 1\n  Syntax error: value, object or array expected.\n* Line 1, Column 1\n  A valid JSON document must be either an array or an object value.\n'

'Installing \'0.4.18\'...\nVersion \'0.4.18\' installed.\nSwitched global version to 0.4.18\n{"errors":[{"component":"general","formattedMessage":"* Line 2, Column 1\\n  Syntax error: value, object or array expected.\\n","message":"* Line 2, Column 1\\n  Syntax error: value, object or array expected.\\n","severity":"error","type":"JSONError"}]}\n'

'docker run --rm --name solc-select-solc-a4712982-4bb2-4dcb-a6e5-acde27110d57 -i -a stdin -a stdout -a stderr solc_select_solc solc-select install 0.4.18 && solc-select use 0.4.18 && solc --standard-json'

'4254.sol:580:19: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address) external returns (bool) - did you forget the "payable" modifier?\n            if (! TokenController(controller).proxyPayment.value(msg.value)(msg.sender))\n                  ^--------------------------------------------^\n'

'1155.sol:291:13: TypeError: Member "value" not found or not visible after argument-dependent lookup in function (address,uint8,string memory) external returns (uint256) - did you forget the "payable" modifier?\n            ZTHTKN.buyAndSetDivPercentage.value(savings)(address(0x0), 33, "");\n            ^---------------------------------^\n'